continue
range.drop(2)
ar[counter]
arr
c
exit
c
range.nil?
range
c
counter
c
counter
range
c
range
c
arr[counter]
range
exit
c
counter
c
cc
c
range.drop(6)
range
c
range
c
range
exit
c
range.drop!(1)
range.drop(1!)
range.drop(1)!
range
range.drop(1)
range.drop(1)!
range.drop!(1)
range
c
arr[counter]
c
arr[counter]
c
arr[counter]
c
arr[counter]
c
arr[counter]
arr[counter]]
range
exit
c
range.drop(1)
range.drop(0)
arr[0]
arr
range.drop
range
c
arr.last
value
position
value.next
value.next != arr[position.next] || value != arr.last 
value
c
arr.last
value
arr
value
c
arr[1].pred
arr[1].methods.sort
ap arr[1].methods
arr[1]
arr[position]
arr
position
value
c
value
arr[position].next
arr[position]
position
value
c
result
c
arr[position]
arr[:position]
value.next
value
position
c
value
result
c
position
c
position
c
position
c
position
c
position
c
position
c
position
n
position
arr
position
c
position
c
position
c
position
c
arr.sort
result
position
c
position
result
c
position
c
position
c
position
c
position
c
position
c
position
c
position
c
position
x
c
position
x
c
position
position\
x
exit
c
arr.inject(, :+)
arr.inject(0, :+)
arr.inject(0; :+)
arr.inject(0; +)
arr.inject
arr
exit
c
size - counter - indexx
c
size - counter - indexx
c
size - counter - indexx
size - counter
size
counter
second_array_sum
c
second_array_sum
c
second_array_sum
exit
c
exit
c\
second_array_sum
c
first_array_sum
second_array_sum
c
second_array_sum
c
second_array_sum
c
arr[second_counter]
second_array_sum
c
counter
size
counter
c
n
counter
n
second_array_sum
arr[counter]
arr
counter
c
arrc
arr.lenght
arr.size
h[1]
ap h[1]
ap h[1].methods.sort
h[1][0]
h[1]
h
h1
h[1]
h = arr.permutation(1).to_a.group_by{|x| 1}
arr.permutation(1).to_a.group_by{|x| 1}
arr.permutation(1).to_a.group_by{|x| 2}
arr.permutation(1).to_a.group_by{|x| 1}
arr.permutation(1).to_a.group_by{|x| second}
arr.permutation(1).to_a.group_by{|x| second_array}
arr.permutation(1).to_a.group_by{|x| 1}
arr.permutation(1).to_a.group_by{|x| x+=1}
arr.permutation(1).to_a.group_by{|x| x+1}
arr.permutation(1).to_a.group_by{|x|}
arr.permutation(1).to_a.group_by{x}
arr.permutation(1).to_a.group_by(1)
arr.permutation(1).to_a
arr.permutation(1)
arr.permutation(1).to_h
arr.permutation(1).to_a
arr.permutation(1)
arr.permutation(0)
arr.permutation()
arr.permutation(1)
arr.split
arr.split!
arr.split
arr
h[true]
h = arr.group_by{|x| x != arr[i]}
true
arr.group_by{|x| x != arr[i]}
arr.group_by{|x| }
arr.group_by()
arr.group_by(\)
arr.group_by(1)
arr
arr.to_h
ap "1 + 2".sum
arr.reverse
i.inspect
i
ap "1 + 2".methods.sort
"1 + 2".to_i
